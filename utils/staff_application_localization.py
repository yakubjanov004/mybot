"""
Localization support for staff application creation feature.

This module provides comprehensive language support for all UI elements,
error messages, and notifications related to staff application creation.
"""

from typing import Dict, Any, Optional, Union
from enum import Enum
from utils.get_lang import LanguageText, get_text


class StaffApplicationTexts:
    """Localized texts for staff application creation"""
    
    # Main menu buttons
    CREATE_CONNECTION_REQUEST = LanguageText(
        "üîå Ulanish arizasi yaratish",
        "üîå –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    )
    
    CREATE_TECHNICAL_SERVICE = LanguageText(
        "üîß Texnik xizmat yaratish", 
        "üîß –°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∑–∞—è–≤–∫—É"
    )
    
    # Client selection texts
    SELECT_CLIENT = LanguageText(
        "Mijozni tanlang",
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    SEARCH_CLIENT = LanguageText(
        "üîç Mijoz qidirish",
        "üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    SEARCH_BY_PHONE = LanguageText(
        "üìû Telefon raqami bo'yicha",
        "üìû –ü–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    )
    
    SEARCH_BY_NAME = LanguageText(
        "üë§ Ism bo'yicha",
        "üë§ –ü–æ –∏–º–µ–Ω–∏"
    )
    
    SEARCH_BY_ID = LanguageText(
        "üÜî ID bo'yicha",
        "üÜî –ü–æ ID"
    )
    
    CREATE_NEW_CLIENT = LanguageText(
        "‚ûï Yangi mijoz yaratish",
        "‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    CLIENT_NOT_FOUND = LanguageText(
        "Mijoz topilmadi",
        "–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    )
    
    MULTIPLE_CLIENTS_FOUND = LanguageText(
        "Bir nechta mijoz topildi",
        "–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤"
    )
    
    # Application type selection
    SELECT_APPLICATION_TYPE = LanguageText(
        "Ariza turini tanlang",
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏"
    )
    
    CONNECTION_REQUEST = LanguageText(
        "üîå Ulanish uchun ariza",
        "üîå –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    )
    
    TECHNICAL_SERVICE = LanguageText(
        "üîß Texnik xizmat",
        "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ"
    )
    
    # Form field labels
    CLIENT_PHONE = LanguageText(
        "Mijoz telefon raqami",
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    CLIENT_NAME = LanguageText(
        "Mijoz ismi",
        "–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    CLIENT_ADDRESS = LanguageText(
        "Mijoz manzili",
        "–ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    SERVICE_DESCRIPTION = LanguageText(
        "Xizmat tavsifi",
        "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏"
    )
    
    SERVICE_LOCATION = LanguageText(
        "Xizmat joylashuvi",
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å–ª—É–≥–∏"
    )
    
    PRIORITY_LEVEL = LanguageText(
        "Muhimlik darajasi",
        "–£—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞"
    )
    
    ADDITIONAL_NOTES = LanguageText(
        "Qo'shimcha izohlar",
        "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏"
    )
    
    # Priority levels
    PRIORITY_LOW = LanguageText("Past", "–ù–∏–∑–∫–∏–π")
    PRIORITY_MEDIUM = LanguageText("O'rta", "–°—Ä–µ–¥–Ω–∏–π")
    PRIORITY_HIGH = LanguageText("Yuqori", "–í—ã—Å–æ–∫–∏–π")
    PRIORITY_URGENT = LanguageText("Shoshilinch", "–°—Ä–æ—á–Ω—ã–π")
    
    # Connection types
    CONNECTION_FIBER = LanguageText("Optik tola", "–û–ø—Ç–æ–≤–æ–ª–æ–∫–Ω–æ")
    CONNECTION_CABLE = LanguageText("Kabel", "–ö–∞–±–µ–ª—å")
    CONNECTION_WIRELESS = LanguageText("Simsiz", "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π")
    CONNECTION_SATELLITE = LanguageText("Sun'iy yo'ldosh", "–°–ø—É—Ç–Ω–∏–∫–æ–≤—ã–π")
    
    # Technical service types
    TECH_REPAIR = LanguageText("Ta'mirlash", "–†–µ–º–æ–Ω—Ç")
    TECH_MAINTENANCE = LanguageText("Profilaktika", "–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞")
    TECH_INSTALLATION = LanguageText("O'rnatish", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞")
    TECH_CONFIGURATION = LanguageText("Sozlash", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞")
    
    # Confirmation texts
    CONFIRM_APPLICATION = LanguageText(
        "Arizani tasdiqlang",
        "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞—è–≤–∫—É"
    )
    
    APPLICATION_PREVIEW = LanguageText(
        "Ariza ko'rib chiqish",
        "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–∫–∏"
    )
    
    EDIT_APPLICATION = LanguageText(
        "‚úèÔ∏è Tahrirlash",
        "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
    )
    
    SUBMIT_APPLICATION = LanguageText(
        "‚úÖ Yuborish",
        "‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å"
    )
    
    CANCEL_APPLICATION = LanguageText(
        "‚ùå Bekor qilish",
        "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"
    )
    
    # Success messages
    APPLICATION_CREATED_SUCCESS = LanguageText(
        "‚úÖ Ariza muvaffaqiyatli yaratildi!",
        "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!"
    )
    
    CLIENT_NOTIFIED = LanguageText(
        "üì± Mijozga xabar yuborildi",
        "üì± –ö–ª–∏–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω"
    )
    
    WORKFLOW_STARTED = LanguageText(
        "üîÑ Ish jarayoni boshlandi",
        "üîÑ –†–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω"
    )
    
    # Error messages
    PERMISSION_DENIED = LanguageText(
        "‚ùå Sizda bu amalni bajarish huquqi yo'q",
        "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ"
    )
    
    CLIENT_SELECTION_ERROR = LanguageText(
        "‚ùå Mijozni tanlashda xatolik",
        "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    APPLICATION_CREATION_ERROR = LanguageText(
        "‚ùå Ariza yaratishda xatolik",
        "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏"
    )
    
    FORM_VALIDATION_ERROR = LanguageText(
        "‚ùå Forma ma'lumotlarida xatolik",
        "‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã"
    )
    
    NETWORK_ERROR = LanguageText(
        "‚ùå Tarmoq xatoligi",
        "‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞"
    )
    
    DAILY_LIMIT_EXCEEDED = LanguageText(
        "‚ùå Kunlik limit oshib ketdi",
        "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç"
    )
    
    # Role-specific messages
    MANAGER_PRIVILEGES = LanguageText(
        "üë®‚Äçüíº Menejer sifatida siz barcha turdagi arizalarni yarata olasiz",
        "üë®‚Äçüíº –ö–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤—Å–µ —Ç–∏–ø—ã –∑–∞—è–≤–æ–∫"
    )
    
    JUNIOR_MANAGER_LIMITATION = LanguageText(
        "üë®‚Äçüíº Kichik menejer sifatida siz faqat ulanish arizalarini yarata olasiz",
        "üë®‚Äçüíº –ö–∞–∫ –º–ª–∞–¥—à–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    )
    
    CONTROLLER_PRIVILEGES = LanguageText(
        "üîç Nazoratchi sifatida sizda kengaytirilgan huquqlar mavjud",
        "üîç –ö–∞–∫ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä, —É –≤–∞—Å –µ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞"
    )
    
    CALL_CENTER_NOTE = LanguageText(
        "üìû Qo'ng'iroq markazi operatori sifatida mijozlar bilan bog'lanishni unutmang",
        "üìû –ö–∞–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏"
    )
    
    # Notification messages
    CLIENT_NOTIFICATION_TITLE = LanguageText(
        "üîî Yangi ariza yaratildi",
        "üîî –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞"
    )
    
    CLIENT_NOTIFICATION_BODY = LanguageText(
        "Sizning nomingizdan yangi ariza yaratildi. Ariza ID: {application_id}",
        "–û—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞. ID –∑–∞—è–≤–∫–∏: {application_id}"
    )
    
    STAFF_CONFIRMATION_TITLE = LanguageText(
        "‚úÖ Ariza tasdiqlandi",
        "‚úÖ –ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"
    )
    
    STAFF_CONFIRMATION_BODY = LanguageText(
        "Siz yaratgan ariza muvaffaqiyatli yuborildi. Ariza ID: {application_id}",
        "–°–æ–∑–¥–∞–Ω–Ω–∞—è –≤–∞–º–∏ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. ID –∑–∞—è–≤–∫–∏: {application_id}"
    )
    
    # Input prompts
    ENTER_PHONE_NUMBER = LanguageText(
        "üìû Telefon raqamini kiriting:",
        "üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
    )
    
    ENTER_CLIENT_NAME = LanguageText(
        "üë§ Mijoz ismini kiriting:",
        "üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:"
    )
    
    ENTER_CLIENT_ADDRESS = LanguageText(
        "üè† Mijoz manzilini kiriting:",
        "üè† –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞:"
    )
    
    ENTER_SERVICE_DESCRIPTION = LanguageText(
        "üìù Xizmat tavsifini kiriting:",
        "üìù –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:"
    )
    
    ENTER_SERVICE_LOCATION = LanguageText(
        "üìç Xizmat joylashuvini kiriting:",
        "üìç –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å–ª—É–≥–∏:"
    )
    
    ENTER_ADDITIONAL_NOTES = LanguageText(
        "üìã Qo'shimcha izohlar (ixtiyoriy):",
        "üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):"
    )
    
    # Validation messages
    PHONE_REQUIRED = LanguageText(
        "Telefon raqami kiritilishi shart",
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
    )
    
    INVALID_PHONE_FORMAT = LanguageText(
        "Noto'g'ri telefon raqami formati",
        "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    )
    
    NAME_REQUIRED = LanguageText(
        "Mijoz ismi kiritilishi shart",
        "–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
    )
    
    NAME_TOO_SHORT = LanguageText(
        "Ism juda qisqa (kamida 2 ta belgi)",
        "–ò–º—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞)"
    )
    
    ADDRESS_REQUIRED = LanguageText(
        "Manzil kiritilishi shart",
        "–ê–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
    )
    
    DESCRIPTION_REQUIRED = LanguageText(
        "Xizmat tavsifi kiritilishi shart",
        "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
    )
    
    DESCRIPTION_TOO_SHORT = LanguageText(
        "Tavsif juda qisqa (kamida 10 ta belgi)",
        "–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)"
    )
    
    LOCATION_REQUIRED = LanguageText(
        "Xizmat joylashuvi kiritilishi shart",
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å–ª—É–≥–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
    )
    
    # Button texts
    BACK = LanguageText("‚óÄÔ∏è Orqaga", "‚óÄÔ∏è –ù–∞–∑–∞–¥")
    NEXT = LanguageText("Keyingi ‚ñ∂Ô∏è", "–î–∞–ª–µ–µ ‚ñ∂Ô∏è")
    SKIP = LanguageText("O'tkazib yuborish", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
    RETRY = LanguageText("üîÑ Qayta urinish", "üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å")
    
    # Status texts
    SEARCHING = LanguageText("üîç Qidirilmoqda...", "üîç –ü–æ–∏—Å–∫...")
    CREATING = LanguageText("‚è≥ Yaratilmoqda...", "‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ...")
    VALIDATING = LanguageText("‚úÖ Tekshirilmoqda...", "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞...")
    SUBMITTING = LanguageText("üì§ Yuborilmoqda...", "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞...")
    
    # Help texts
    PHONE_FORMAT_HELP = LanguageText(
        "Masalan: +998901234567 yoki 901234567",
        "–ù–∞–ø—Ä–∏–º–µ—Ä: +998901234567 –∏–ª–∏ 901234567"
    )
    
    NAME_FORMAT_HELP = LanguageText(
        "Ism va familiyani to'liq kiriting",
        "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"
    )
    
    DESCRIPTION_HELP = LanguageText(
        "Muammo yoki xizmat haqida batafsil yozing",
        "–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ —É—Å–ª—É–≥—É"
    )


class StaffApplicationErrorMessages:
    """Localized error messages for staff application creation"""
    
    # Permission errors
    NO_CONNECTION_PERMISSION = LanguageText(
        "Sizda ulanish arizalarini yaratish huquqi yo'q",
        "–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    )
    
    NO_TECHNICAL_PERMISSION = LanguageText(
        "Sizda texnik xizmat arizalarini yaratish huquqi yo'q",
        "–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ"
    )
    
    NO_CLIENT_SELECTION_PERMISSION = LanguageText(
        "Sizda mijozlarni tanlash huquqi yo'q",
        "–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –≤—ã–±–æ—Ä –∫–ª–∏–µ–Ω—Ç–æ–≤"
    )
    
    NO_CLIENT_CREATION_PERMISSION = LanguageText(
        "Sizda yangi mijoz yaratish huquqi yo'q",
        "–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤"
    )
    
    DAILY_LIMIT_EXCEEDED = LanguageText(
        "Bugun yaratish mumkin bo'lgan arizalar soni tugadi",
        "–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–æ–∫"
    )
    
    # Validation errors
    INVALID_CLIENT_DATA = LanguageText(
        "Mijoz ma'lumotlari noto'g'ri",
        "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞"
    )
    
    INVALID_APPLICATION_DATA = LanguageText(
        "Ariza ma'lumotlari noto'g'ri",
        "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏"
    )
    
    CLIENT_ALREADY_EXISTS = LanguageText(
        "Bunday mijoz allaqachon mavjud",
        "–¢–∞–∫–æ–π –∫–ª–∏–µ–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    )
    
    DUPLICATE_APPLICATION = LanguageText(
        "Bunday ariza allaqachon mavjud",
        "–¢–∞–∫–∞—è –∑–∞—è–≤–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    )
    
    # System errors
    DATABASE_ERROR = LanguageText(
        "Ma'lumotlar bazasi xatoligi",
        "–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    )
    
    WORKFLOW_ERROR = LanguageText(
        "Ish jarayonini boshlashda xatolik",
        "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"
    )
    
    NOTIFICATION_ERROR = LanguageText(
        "Xabar yuborishda xatolik",
        "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    )
    
    AUDIT_LOG_ERROR = LanguageText(
        "Audit yozuvini saqlashda xatolik",
        "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞"
    )
    
    # Network errors
    CONNECTION_TIMEOUT = LanguageText(
        "Ulanish vaqti tugadi",
        "–í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ"
    )
    
    SERVER_UNAVAILABLE = LanguageText(
        "Server mavjud emas",
        "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    )
    
    # Input validation errors
    EMPTY_FIELD = LanguageText(
        "Bu maydon bo'sh bo'lishi mumkin emas",
        "–≠—Ç–æ –ø–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
    )
    
    FIELD_TOO_LONG = LanguageText(
        "Bu maydon juda uzun",
        "–≠—Ç–æ –ø–æ–ª–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ"
    )
    
    FIELD_TOO_SHORT = LanguageText(
        "Bu maydon juda qisqa",
        "–≠—Ç–æ –ø–æ–ª–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ"
    )
    
    INVALID_FORMAT = LanguageText(
        "Noto'g'ri format",
        "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
    )
    
    INVALID_CHARACTERS = LanguageText(
        "Noto'g'ri belgilar",
        "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã"
    )


def get_staff_application_text(text_key: str, language: str = 'uz') -> str:
    """
    Get localized text for staff application creation.
    
    Args:
        text_key: Key of the text (attribute name from StaffApplicationTexts)
        language: Language code ('uz' or 'ru')
        
    Returns:
        Localized text string
    """
    if hasattr(StaffApplicationTexts, text_key):
        text_obj = getattr(StaffApplicationTexts, text_key)
        if isinstance(text_obj, LanguageText):
            return get_text(text_obj, language)
    
    return text_key


def get_staff_application_error(error_key: str, language: str = 'uz') -> str:
    """
    Get localized error message for staff application creation.
    
    Args:
        error_key: Key of the error message
        language: Language code ('uz' or 'ru')
        
    Returns:
        Localized error message
    """
    if hasattr(StaffApplicationErrorMessages, error_key):
        error_obj = getattr(StaffApplicationErrorMessages, error_key)
        if isinstance(error_obj, LanguageText):
            return get_text(error_obj, language)
    
    return error_key


def format_application_summary(application_data: Dict[str, Any], language: str = 'uz') -> str:
    """
    Format application summary with localized labels.
    
    Args:
        application_data: Application data dictionary
        language: Language code ('uz' or 'ru')
        
    Returns:
        Formatted application summary
    """
    summary_lines = []
    
    # Application type
    app_type = application_data.get('application_type', '')
    if app_type == 'connection':
        type_text = get_text(StaffApplicationTexts.CONNECTION_REQUEST, language)
    elif app_type == 'technical':
        type_text = get_text(StaffApplicationTexts.TECHNICAL_SERVICE, language)
    else:
        type_text = app_type
    
    summary_lines.append(f"üìã {type_text}")
    
    # Client information
    client_name = application_data.get('client_name', '')
    if client_name:
        client_label = get_text(StaffApplicationTexts.CLIENT_NAME, language)
        summary_lines.append(f"üë§ {client_label}: {client_name}")
    
    client_phone = application_data.get('client_phone', '')
    if client_phone:
        phone_label = get_text(StaffApplicationTexts.CLIENT_PHONE, language)
        summary_lines.append(f"üìû {phone_label}: {client_phone}")
    
    # Service details
    description = application_data.get('description', '')
    if description:
        desc_label = get_text(StaffApplicationTexts.SERVICE_DESCRIPTION, language)
        summary_lines.append(f"üìù {desc_label}: {description[:100]}...")
    
    location = application_data.get('location', '')
    if location:
        location_label = get_text(StaffApplicationTexts.SERVICE_LOCATION, language)
        summary_lines.append(f"üìç {location_label}: {location}")
    
    # Priority
    priority = application_data.get('priority', '')
    if priority:
        priority_label = get_text(StaffApplicationTexts.PRIORITY_LEVEL, language)
        priority_text = get_priority_text(priority, language)
        summary_lines.append(f"‚ö° {priority_label}: {priority_text}")
    
    return '\n'.join(summary_lines)


def get_priority_text(priority: str, language: str = 'uz') -> str:
    """Get localized priority text"""
    priority_map = {
        'low': StaffApplicationTexts.PRIORITY_LOW,
        'medium': StaffApplicationTexts.PRIORITY_MEDIUM,
        'high': StaffApplicationTexts.PRIORITY_HIGH,
        'urgent': StaffApplicationTexts.PRIORITY_URGENT
    }
    
    if priority in priority_map:
        return get_text(priority_map[priority], language)
    
    return priority


def get_connection_type_text(connection_type: str, language: str = 'uz') -> str:
    """Get localized connection type text"""
    type_map = {
        'fiber': StaffApplicationTexts.CONNECTION_FIBER,
        'cable': StaffApplicationTexts.CONNECTION_CABLE,
        'wireless': StaffApplicationTexts.CONNECTION_WIRELESS,
        'satellite': StaffApplicationTexts.CONNECTION_SATELLITE
    }
    
    if connection_type in type_map:
        return get_text(type_map[connection_type], language)
    
    return connection_type


def get_technical_service_type_text(service_type: str, language: str = 'uz') -> str:
    """Get localized technical service type text"""
    type_map = {
        'repair': StaffApplicationTexts.TECH_REPAIR,
        'maintenance': StaffApplicationTexts.TECH_MAINTENANCE,
        'installation': StaffApplicationTexts.TECH_INSTALLATION,
        'configuration': StaffApplicationTexts.TECH_CONFIGURATION
    }
    
    if service_type in type_map:
        return get_text(type_map[service_type], language)
    
    return service_type


def get_role_specific_message(role: str, language: str = 'uz') -> Optional[str]:
    """Get role-specific message for staff application creation"""
    role_messages = {
        'manager': StaffApplicationTexts.MANAGER_PRIVILEGES,
        'junior_manager': StaffApplicationTexts.JUNIOR_MANAGER_LIMITATION,
        'controller': StaffApplicationTexts.CONTROLLER_PRIVILEGES,
        'call_center': StaffApplicationTexts.CALL_CENTER_NOTE
    }
    
    if role in role_messages:
        return get_text(role_messages[role], language)
    
    return None


def create_localized_keyboard_text(base_text: str, language: str = 'uz') -> str:
    """
    Create localized keyboard button text.
    
    Args:
        base_text: Base text key or direct text
        language: Language code
        
    Returns:
        Localized button text
    """
    # Try to get from StaffApplicationTexts first
    text = get_staff_application_text(base_text, language)
    if text != base_text:
        return text
    
    # If not found, return the base text
    return base_text


def validate_language_consistency(texts: Dict[str, Any], language: str = 'uz') -> bool:
    """
    Validate that all texts are consistently localized.
    
    Args:
        texts: Dictionary of texts to validate
        language: Target language
        
    Returns:
        True if all texts are properly localized
    """
    for key, value in texts.items():
        if isinstance(value, str):
            # Check if text contains mixed languages (basic heuristic)
            if language == 'uz' and any(ord(c) >= 0x0400 and ord(c) <= 0x04FF for c in value):
                return False  # Uzbek text shouldn't contain Cyrillic
            elif language == 'ru' and not any(ord(c) >= 0x0400 and ord(c) <= 0x04FF for c in value):
                # Russian text should contain some Cyrillic (unless it's symbols/numbers only)
                if any(c.isalpha() for c in value):
                    return False
    
    return True


# Export commonly used text keys for convenience
class TextKeys:
    """Common text keys for staff application creation"""
    CREATE_CONNECTION_REQUEST = 'CREATE_CONNECTION_REQUEST'
    CREATE_TECHNICAL_SERVICE = 'CREATE_TECHNICAL_SERVICE'
    SELECT_CLIENT = 'SELECT_CLIENT'
    SEARCH_CLIENT = 'SEARCH_CLIENT'
    APPLICATION_CREATED_SUCCESS = 'APPLICATION_CREATED_SUCCESS'
    PERMISSION_DENIED = 'PERMISSION_DENIED'
    FORM_VALIDATION_ERROR = 'FORM_VALIDATION_ERROR'


class ErrorKeys:
    """Common error keys for staff application creation"""
    NO_CONNECTION_PERMISSION = 'NO_CONNECTION_PERMISSION'
    NO_TECHNICAL_PERMISSION = 'NO_TECHNICAL_PERMISSION'
    INVALID_CLIENT_DATA = 'INVALID_CLIENT_DATA'
    DATABASE_ERROR = 'DATABASE_ERROR'
    WORKFLOW_ERROR = 'WORKFLOW_ERROR'
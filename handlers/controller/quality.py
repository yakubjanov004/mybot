from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from datetime import datetime

from database.queries import (
    UserQueries,
    ReportQueries,
    FeedbackQueries
)
from keyboards.controllers_buttons import quality_control_menu, back_to_controllers_menu
from states.controllers_states import ControllersStates
from utils.logger import logger

def get_controller_quality_router():
    router = Router()

    @router.message(F.text.in_(["üéØ Sifat nazorati", "üéØ –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞"]))
    async def quality_control_menu_handler(message: Message, state: FSMContext):
        """Sifat nazorati menyusi"""
        user = await get_user_by_telegram_id(message.from_user.id)
        if not user or user['role'] != 'controller':
            return
        
        lang = user.get('language', 'uz')
        await state.set_state(ControllersStates.quality_control)
        
        # Sifat ko'rsatkichlarini olish
        quality_metrics = await get_service_quality_metrics()
        
        if lang == 'uz':
            text = f"""üéØ <b>Sifat nazorati</b>

‚≠ê <b>Xizmat sifati ko'rsatkichlari:</b>
‚Ä¢ O'rtacha baho: {quality_metrics.get('avg_rating', 0):.1f}/5.0
‚Ä¢ Jami sharhlar: {quality_metrics.get('total_reviews', 0)}
‚Ä¢ Mijoz qoniqishi: {quality_metrics.get('satisfaction_rate', 0)}%

Kerakli bo'limni tanlang:"""
        else:
            text = f"""üéØ <b>–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞</b>

‚≠ê <b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ª—É–≥:</b>
‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {quality_metrics.get('avg_rating', 0):.1f}/5.0
‚Ä¢ –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {quality_metrics.get('total_reviews', 0)}
‚Ä¢ –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤: {quality_metrics.get('satisfaction_rate', 0)}%

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"""
        
        await message.answer(
            text,
            reply_markup=quality_control_menu(lang),
            parse_mode='HTML'
        )

    @router.message(F.text.in_(["üí¨ Mijoz fikrlari", "üí¨ –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤"]))
    async def customer_feedback_view(message: Message, state: FSMContext):
        """Mijoz fikrilarini ko'rish"""
        user = await get_user_by_telegram_id(message.from_user.id)
        if not user or user['role'] != 'controller':
            return
        
        lang = user.get('language', 'uz')
        feedback_list = await get_recent_feedback(days=7)
        
        if lang == 'uz':
            text = "üí¨ <b>So'nggi mijoz fikrlari (7 kun):</b>\n\n"
        else:
            text = "üí¨ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ (7 –¥–Ω–µ–π):</b>\n\n"
        
        if feedback_list:
            for feedback in feedback_list[:10]:
                stars = "‚≠ê" * feedback['rating']
                client_name = feedback.get('client_name', 'Noma\'lum')
                comment = feedback.get('comment', '')
                created_date = feedback.get('created_at', '')
                
                text += f"{stars} <b>{client_name}</b>\n"
                if comment:
                    comment_preview = comment[:80] + "..." if len(comment) > 80 else comment
                    text += f"üí≠ {comment_preview}\n"
                text += f"üìÖ {created_date}\n\n"
        else:
            no_feedback_text = "So'nggi fikrlar topilmadi" if lang == 'uz' else "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            text += no_feedback_text
        
        await message.answer(text, parse_mode='HTML')

    @router.message(F.text.in_(["‚ö†Ô∏è Muammoli holatlar", "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏"]))
    async def unresolved_issues_view(message: Message, state: FSMContext):
        """Muammoli holatlarni ko'rish"""
        user = await get_user_by_telegram_id(message.from_user.id)
        if not user or user['role'] != 'controller':
            return
        
        lang = user.get('language', 'uz')
        issues = await get_unresolved_issues()
        
        if lang == 'uz':
            text = "‚ö†Ô∏è <b>Hal etilmagan muammolar:</b>\n\n"
        else:
            text = "‚ö†Ô∏è <b>–ù–µ—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:</b>\n\n"
        
        if issues:
            for issue in issues[:10]:
                order_id = issue.get('id', 'N/A')
                client_name = issue.get('client_name', 'Noma\'lum')
                description = issue.get('description', '')
                days_pending = issue.get('days_pending', 0)
                
                urgency_icon = "üî¥" if days_pending > 5 else "üü°" if days_pending > 2 else "üü¢"
                
                text += f"{urgency_icon} <b>#{order_id}</b> - {client_name}\n"
                if description:
                    desc_preview = description[:60] + "..." if len(description) > 60 else description
                    text += f"üìù {desc_preview}\n"
                
                pending_text = "kun kutmoqda" if lang == 'uz' else "–¥–Ω–µ–π –æ–∂–∏–¥–∞–Ω–∏—è"
                text += f"‚è±Ô∏è {days_pending} {pending_text}\n\n"
        else:
            no_issues_text = "Hal etilmagan muammolar yo'q" if lang == 'uz' else "–ù–µ—Ç –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º"
            text += no_issues_text
        
        await message.answer(text, parse_mode='HTML')

    @router.message(F.text.in_(["üìä Sifat baholash", "üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞"]))
    async def service_quality_assessment(message: Message, state: FSMContext):
        """Xizmat sifatini baholash"""
        user = await get_user_by_telegram_id(message.from_user.id)
        if not user or user['role'] != 'controller':
            return
        
        lang = user.get('language', 'uz')
        quality_metrics = await get_service_quality_metrics()
        
        if lang == 'uz':
            text = f"""üìä <b>Xizmat sifatini baholash</b>

‚≠ê <b>Umumiy ko'rsatkichlar:</b>
‚Ä¢ O'rtacha baho: {quality_metrics.get('avg_rating', 0):.1f}/5.0
‚Ä¢ Jami sharhlar: {quality_metrics.get('total_reviews', 0)}
‚Ä¢ Mijoz qoniqishi: {quality_metrics.get('satisfaction_rate', 0)}%

üìà <b>Baholar taqsimoti:</b>"""
        else:
            text = f"""üìä <b>–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ª—É–≥</b>

‚≠ê <b>–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {quality_metrics.get('avg_rating', 0):.1f}/5.0
‚Ä¢ –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {quality_metrics.get('total_reviews', 0)}
‚Ä¢ –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤: {quality_metrics.get('satisfaction_rate', 0)}%

üìà <b>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫:</b>"""
        
        # Baholar taqsimoti
        rating_distribution = quality_metrics.get('rating_distribution', {})
        total_reviews = quality_metrics.get('total_reviews', 0)
        
        for rating in range(5, 0, -1):
            count = rating_distribution.get(rating, 0)
            percentage = (count / total_reviews * 100) if total_reviews > 0 else 0
            stars = "‚≠ê" * rating
            text += f"\n{stars} {count} ({percentage:.1f}%)"
        
        # Tavsiyalar
        recommendations_text = "\n\nüí° <b>Tavsiyalar:</b>" if lang == 'uz' else "\n\nüí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>"
        text += recommendations_text
        
        avg_rating = quality_metrics.get('avg_rating', 0)
        if avg_rating < 3.0:
            rec_text = "\n‚Ä¢ Xizmat sifatini yaxshilash zarur" if lang == 'uz' else "\n‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"
            text += rec_text
        elif avg_rating < 4.0:
            rec_text = "\n‚Ä¢ Yaxshi natija, lekin yaxshilash mumkin" if lang == 'uz' else "\n‚Ä¢ –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –µ—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è"
            text += rec_text
        else:
            rec_text = "\n‚Ä¢ A'lo xizmat sifati saqlanmoqda" if lang == 'uz' else "\n‚Ä¢ –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
            text += rec_text
        
        await message.answer(text, parse_mode='HTML')

    @router.message(F.text.in_(["üìà Sifat tendensiyalari", "ÔøΩÔøΩ –¢–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞"]))
    async def quality_trends_view(message: Message, state: FSMContext):
        """Sifat tendensiyalarini ko'rish"""
        user = await get_user_by_telegram_id(message.from_user.id)
        if not user or user['role'] != 'controller':
            return
        
        lang = user.get('language', 'uz')
        trends = await get_quality_trends()
        
        if lang == 'uz':
            text = "üìà <b>Sifat tendensiyalari:</b>\n\n"
        else:
            text = "üìà <b>–¢–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞:</b>\n\n"
        
        if trends:
            for period in trends[:8]:  # So'nggi 8 hafta
                period_name = period.get('period', '')
                rating = period.get('avg_rating', 0)
                change = period.get('change', 0)
                review_count = period.get('review_count', 0)
                
                trend_icon = "üìà" if change > 0 else "üìâ" if change < 0 else "‚û°Ô∏è"
                
                text += f"{trend_icon} <b>{period_name}</b>\n"
                text += f"‚≠ê Baho: {rating:.1f}"
                
                if change != 0:
                    change_text = f" ({change:+.1f})"
                    text += change_text
                
                reviews_text = "sharh" if lang == 'uz' else "–æ—Ç–∑—ã–≤–æ–≤"
                text += f"\nüí¨ {review_count} {reviews_text}\n\n"
        else:
            no_trends_text = "Tendensiya ma'lumotlari yo'q" if lang == 'uz' else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è—Ö"
            text += no_trends_text
        
        await message.answer(text, parse_mode='HTML')

    @router.message(F.text.in_(["üìã Sifat hisoboti", "üìã –û—Ç—á–µ—Ç –ø–æ –∫–∞—á–µ—Å—Ç–≤—É"]))
    async def quality_report(message: Message, state: FSMContext):
        """Sifat hisoboti yaratish"""
        user = await get_user_by_telegram_id(message.from_user.id)
        if not user or user['role'] != 'controller':
            return
        
        lang = user.get('language', 'uz')
        
        # Ma'lumotlarni yig'ish
        quality_metrics = await get_service_quality_metrics()
        recent_feedback = await get_recent_feedback(days=30)
        unresolved_issues = await get_unresolved_issues()
        
        if lang == 'uz':
            text = f"""üìã <b>Sifat hisoboti</b>
üìÖ <b>Sana:</b> {datetime.now().strftime('%d.%m.%Y %H:%M')}

‚≠ê <b>Umumiy ko'rsatkichlar:</b>
‚Ä¢ O'rtacha baho: {quality_metrics.get('avg_rating', 0):.1f}/5.0
‚Ä¢ Jami sharhlar: {quality_metrics.get('total_reviews', 0)}
‚Ä¢ Mijoz qoniqishi: {quality_metrics.get('satisfaction_rate', 0)}%

üìà <b>So'nggi 30 kun faolligi:</b>
‚Ä¢ Yangi fikrlar: {len(recent_feedback)}
‚Ä¢ Hal etilmagan muammolar: {len(unresolved_issues)}

üí° <b>Tavsiyalar:</b>"""
        else:
            text = f"""üìã <b>–û—Ç—á–µ—Ç –ø–æ –∫–∞—á–µ—Å—Ç–≤—É</b>
üìÖ <b>–î–∞—Ç–∞:</b> {datetime.now().strftime('%d.%m.%Y %H:%M')}

‚≠ê <b>–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {quality_metrics.get('avg_rating', 0):.1f}/5.0
‚Ä¢ –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {quality_metrics.get('total_reviews', 0)}
‚Ä¢ –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤: {quality_metrics.get('satisfaction_rate', 0)}%

üìà <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:</b>
‚Ä¢ –ù–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã: {len(recent_feedback)}
‚Ä¢ –ù–µ—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã: {len(unresolved_issues)}

üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>"""
        
        # Tavsiyalar
        avg_rating = quality_metrics.get('avg_rating', 0)
        if avg_rating < 3.0:
            rec_text = "\n‚Ä¢ Xizmat sifatini yaxshilash zarur" if lang == 'uz' else "\n‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"
            text += rec_text
        elif avg_rating < 4.0:
            rec_text = "\n‚Ä¢ Yaxshi natija, lekin yaxshilash mumkin" if lang == 'uz' else "\n‚Ä¢ –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –µ—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è"
            text += rec_text
        else:
            rec_text = "\n‚Ä¢ A'lo xizmat sifati saqlanmoqda" if lang == 'uz' else "\n‚Ä¢ –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
            text += rec_text
        
        if len(unresolved_issues) > 5:
            urgent_text = "\n‚Ä¢ Hal etilmagan muammolarga e'tibor bering" if lang == 'uz' else "\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"
            text += urgent_text
        
        await message.answer(text, parse_mode='HTML')

    return router

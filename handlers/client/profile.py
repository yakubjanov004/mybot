from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from keyboards.client_buttons import get_client_profile_menu, get_back_to_profile_menu, get_main_menu_keyboard
from utils.inline_cleanup import safe_remove_inline_call
from states.user_states import UserStates
from database.client_queries import get_client_info, get_user_zayavka_statistics
from database.base_queries import get_user_by_telegram_id, update_client_info, get_user_lang
from utils.logger import setup_logger
from utils.inline_cleanup import answer_and_cleanup, safe_delete_message
from utils.role_checks import client_only
from loader import inline_message_manager

def get_client_profile_router():
    logger = setup_logger('bot.client')
    router = Router()

    @client_only
    @router.message(F.text.in_(['üë§ Profil', 'üë§ –ü—Ä–æ—Ñ–∏–ª—å']))
    async def client_profile_handler(message: Message, state: FSMContext):
        """Mijoz profili bilan ishlash"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            if not user:
                await message.answer("Foydalanuvchi topilmadi.")
                return
            
            lang = user.get('language', 'uz')
            profile_text = (
                "Profil menyusi. Kerakli amalni tanlang."
                if lang == 'uz' else
                "–ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ."
            )
            
            sent_message = await message.answer(
                profile_text,
                reply_markup=get_client_profile_menu(lang)
            )
            await inline_message_manager.track(message.from_user.id, sent_message.message_id)
            await state.set_state(UserStates.profile_menu)
            
        except Exception as e:
            logger.error(f"client_profile_handler da xatolik: {str(e)}", exc_info=True)
            lang = await get_user_lang(message.from_user)
            error_text = "Xatolik yuz berdi" if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
            await message.answer(error_text)

    @client_only
    @router.callback_query(F.data == "client_view_info")
    async def handle_view_info(callback: CallbackQuery):
        """Mijoz ma'lumotlarini ko'rish"""
        try:
            lang = await get_user_lang(callback.from_user.id)
            user = await get_user_by_telegram_id(callback.from_user.id)
            
            if not user:
                await callback.answer("Foydalanuvchi topilmadi")
                return
            
            client_info = await get_client_info(user['id'])
            
            if client_info:
                info_text = (
                    f"üë§ Shaxsiy ma'lumotlar:\n\n"
                    f"üìù Ism: {client_info.get('full_name', 'Kiritilmagan')}\n"
                    f"üìû Telefon: {client_info.get('phone_number', 'Kiritilmagan')}\n"
                    f"üìç Manzil: {client_info.get('address', 'Kiritilmagan')}\n"
                    f"üåê Til: {'O\'zbekcha' if client_info.get('language') == 'uz' else '–†—É—Å—Å–∫–∏–π'}\n"
                    f"üìÖ Ro'yxatdan o'tgan: {client_info.get('created_at', 'Noma\'lum')}"
                    if lang == 'uz' else
                    f"üë§ –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n"
                    f"üìù –ò–º—è: {client_info.get('full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {client_info.get('phone_number', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üìç –ê–¥—Ä–µ—Å: {client_info.get('address', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üåê –Ø–∑—ã–∫: {'–£–∑–±–µ–∫—Å–∫–∏–π' if client_info.get('language') == 'uz' else '–†—É—Å—Å–∫–∏–π'}\n"
                    f"üìÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {client_info.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
                )
            else:
                info_text = "Ma'lumotlar topilmadi" if lang == 'uz' else "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            
            await callback.message.edit_text(
                info_text,
                reply_markup=get_back_to_profile_menu(lang)
            )
            await callback.answer()
            await safe_remove_inline_call(callback)
            
        except Exception as e:
            logger.error(f"handle_view_info da xatolik: {str(e)}", exc_info=True)
            await callback.answer("Xatolik yuz berdi")

    @client_only
    @router.callback_query(F.data == "client_order_stats")
    async def handle_order_stats(callback: CallbackQuery):
        """Mijoz arizalar statistikasini ko'rish"""
        try:
            lang = await get_user_lang(callback.from_user.id)
            stats = await get_user_zayavka_statistics(callback.from_user.id)
            
            # If stats is an integer (error case), convert to default stats
            if isinstance(stats, int):
                stats = {
                    'new': {'weekly': 0, 'monthly': 0},
                    'in_progress': {'weekly': 0, 'monthly': 0},
                    'completed': {'weekly': 0, 'monthly': 0},
                    'cancelled': {'weekly': 0, 'monthly': 0}
                }
            
            stats_text = (
                f"üìä Arizalar statistikasi:\n"
                f"üÜï Yangi: {stats['new']['weekly']}/{stats['new']['monthly']}\n"
                f"üöß Jarayonda: {stats['in_progress']['weekly']}/{stats['in_progress']['monthly']}\n"
                f"‚úÖ Bajarilgan: {stats['completed']['weekly']}/{stats['completed']['monthly']}\n"
                f"‚ùå Bekor qilingan: {stats['cancelled']['weekly']}/{stats['cancelled']['monthly']}\n"
                if lang == 'uz' else
                f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫:\n"
                f"üÜï –ù–æ–≤—ã–µ: {stats['new']['weekly']}/{stats['new']['monthly']}\n"
                f"üöß –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {stats['in_progress']['weekly']}/{stats['in_progress']['monthly']}\n"
                f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ã: {stats['completed']['weekly']}/{stats['completed']['monthly']}\n"
                f"‚ùå –û—Ç–º–µ–Ω–µ–Ω—ã: {stats['cancelled']['weekly']}/{stats['cancelled']['monthly']}\n"
            )
            
            await callback.message.edit_text(
                stats_text,
                reply_markup=get_back_to_profile_menu(lang)
            )
            await callback.answer()
            await safe_remove_inline_call(callback)
            
        except Exception as e:
            logger.error(f"handle_order_stats da xatolik: {str(e)}", exc_info=True)
            await callback.answer("Xatolik yuz berdi")

    @client_only
    @router.callback_query(F.data == "client_profile_back")
    async def handle_back_to_profile(callback: CallbackQuery):
        """Orqaga qaytish"""
        try:
            lang = await get_user_lang(callback.from_user.id)
            profile_text = (
                "Profil menyusi. Kerakli amalni tanlang."
                if lang == 'uz' else
                "–ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ."
            )
            
            await callback.message.edit_text(
                profile_text,
                reply_markup=get_client_profile_menu(lang)
            )
            await callback.answer()
            await safe_remove_inline_call(callback)
            
        except Exception as e:
            logger.error(f"handle_back_to_profile da xatolik: {str(e)}", exc_info=True)
            await callback.answer("Xatolik yuz berdi")

    return router

from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from functools import wraps
import logging

from database.admin_queries import is_admin, log_admin_action
from database.base_queries import update_user_language, get_user_by_telegram_id, get_user_lang
from keyboards.admin_buttons import language_keyboard, get_admin_main_menu
from utils.inline_cleanup import safe_delete_message, answer_and_cleanup
from utils.logger import setup_logger
from utils.role_router import get_role_router
from utils.role_checks import admin_only

# Setup logger
logger = setup_logger('bot.admin.language')

def get_admin_language_router():
    router = get_role_router("admin")

    @router.message(F.text.in_(["üåê Til sozlamalari", "üåê –Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"]))
    @admin_only
    async def admin_language_settings(message: Message):
        """Admin language settings"""
        try:
            await safe_delete_message(message.bot, message.chat.id, message.message_id)
            lang = await get_user_lang(message.from_user.id)
            
            if lang == 'uz':
                text = (
                    f"üåê <b>Admin til sozlamalari</b>\n\n"
                    f"Joriy til: <b>O'zbek tili</b> üá∫üáø\n\n"
                    f"Admin panel tilini o'zgartirish uchun\n"
                    f"quyidagi tugmalardan birini tanlang:"
                )
            else:
                text = (
                    f"üåê <b>–Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n"
                    f"–¢–µ–∫—É—â–∏–π —è–∑—ã–∫: <b>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</b> üá∑üá∫\n\n"
                    f"–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
                    f"–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:"
                )
            
            await message.answer(
                text,
                reply_markup=language_keyboard()
            )
            
        except Exception as e:
            logger.error(f"Error in admin language settings: {e}")
            lang = await get_user_lang(message.from_user.id)
            error_text = "Xatolik yuz berdi." if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
            await message.answer(error_text)

    @router.callback_query(F.data.in_(["lang_uz", "lang_ru"]))
    @admin_only
    async def change_admin_language(call: CallbackQuery):
        """Change admin language"""
        try:
            await answer_and_cleanup(call, cleanup_after=True)
            new_lang = call.data.split("_")[1]  # uz or ru
            user_id = call.from_user.id
            # Update user language
            success = await update_user_language(user_id, new_lang)
            if success:
                # Log admin action
                await log_admin_action(user_id, "change_language", {"new_language": new_lang})
                if new_lang == 'uz':
                    text = (
                        f"‚úÖ <b>Til muvaffaqiyatli o'zgartirildi!</b>\n\n"
                        f"üá∫üáø Admin panel endi O'zbek tilida ishlaydi.\n\n"
                        f"Barcha menyu va xabarlar O'zbek tilida\n"
                        f"ko'rsatiladi."
                    )
                else:
                    text = (
                        f"‚úÖ <b>–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!</b>\n\n"
                        f"üá∑üá∫ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.\n\n"
                        f"–í—Å–µ –º–µ–Ω—é –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è\n"
                        f"–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
                    )
                await call.message.edit_text(text)
                # Send new reply keyboard in the new language
                await call.message.answer(
                    "Asosiy menyu yangilandi." if new_lang == 'uz' else "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ.",
                    reply_markup=get_admin_main_menu(new_lang)
                )
                await call.answer("Til o'zgartirildi!" if new_lang == 'uz' else "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω!")
            else:
                current_lang = await get_user_lang(user_id)
                error_text = "Tilni o'zgartirishda xatolik yuz berdi." if current_lang == 'uz' else "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞."
                await call.message.edit_text(error_text)
                await call.answer("Xatolik!" if current_lang == 'uz' else "–û—à–∏–±–∫–∞!")
        except Exception as e:
            logger.error(f"Error changing admin language: {e}")
            current_lang = await get_user_lang(call.from_user.id)
            await call.answer("Xatolik yuz berdi." if current_lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")

    @router.message(F.text.in_(["üîÑ Tilni qayta tiklash", "üîÑ –°–±—Ä–æ—Å–∏—Ç—å —è–∑—ã–∫"]))
    @admin_only
    async def reset_admin_language(message: Message):
        """Reset admin language to default"""
        try:
            await safe_delete_message(message.bot, message.chat.id, message.message_id)
            user_id = message.from_user.id
            
            # Reset to Uzbek (default)
            success = await update_user_language(user_id, 'uz')
            
            if success:
                # Log admin action
                await log_admin_action(user_id, "reset_language", {"reset_to": "uz"})
                
                text = (
                    f"üîÑ <b>Til standart holatga qaytarildi!</b>\n\n"
                    f"üá∫üáø Admin panel endi O'zbek tilida (standart)\n"
                    f"ishlaydi.\n\n"
                    f"Kerak bo'lsa, tilni qayta o'zgartirishingiz mumkin."
                )
                
                await message.answer(text)
            else:
                lang = await get_user_lang(user_id)
                error_text = "Tilni qayta tiklashda xatolik." if lang == 'uz' else "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —è–∑—ã–∫–∞."
                await message.answer(error_text)
            
        except Exception as e:
            logger.error(f"Error resetting admin language: {e}")
            lang = await get_user_lang(message.from_user.id)
            error_text = "Xatolik yuz berdi." if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
            await message.answer(error_text)

    @router.message(F.text.in_(["üìä Til statistikasi", "üìä –Ø–∑—ã–∫–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]))
    @admin_only
    async def language_statistics(message: Message):
        """Show language usage statistics"""
        try:
            await safe_delete_message(message.bot, message.chat.id, message.message_id)
            lang = await get_user_lang(message.from_user.id)
            
            # This would require a database query to get language statistics
            # For now, showing placeholder data
            
            if lang == 'uz':
                text = (
                    f"üìä <b>Til statistikasi</b>\n\n"
                    f"üá∫üáø <b>O'zbek tili:</b>\n"
                    f"‚Ä¢ Foydalanuvchilar: <b>85%</b>\n"
                    f"‚Ä¢ Adminlar: <b>90%</b>\n"
                    f"‚Ä¢ Texniklar: <b>95%</b>\n\n"
                    f"üá∑üá∫ <b>Rus tili:</b>\n"
                    f"‚Ä¢ Foydalanuvchilar: <b>15%</b>\n"
                    f"‚Ä¢ Adminlar: <b>10%</b>\n"
                    f"‚Ä¢ Texniklar: <b>5%</b>\n\n"
                    f"üìà <b>Tendentsiyalar:</b>\n"
                    f"‚Ä¢ O'zbek tili foydalanuvchilari ko'paymoqda\n"
                    f"‚Ä¢ Rus tili barqaror holatda\n\n"
                    f"üí° <b>Tavsiya:</b>\n"
                    f"O'zbek tilidagi kontentni rivojlantirish\n"
                    f"tavsiya etiladi."
                )
            else:
                text = (
                    f"üìä <b>–Ø–∑—ã–∫–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
                    f"üá∫üáø <b>–£–∑–±–µ–∫—Å–∫–∏–π —è–∑—ã–∫:</b>\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: <b>85%</b>\n"
                    f"‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: <b>90%</b>\n"
                    f"‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∏: <b>95%</b>\n\n"
                    f"üá∑üá∫ <b>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫:</b>\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: <b>15%</b>\n"
                    f"‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: <b>10%</b>\n"
                    f"‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∏: <b>5%</b>\n\n"
                    f"üìà <b>–¢–µ–Ω–¥–µ–Ω—Ü–∏–∏:</b>\n"
                    f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∑–±–µ–∫—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —Ä–∞—Å—Ç—É—Ç\n"
                    f"‚Ä¢ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏\n\n"
                    f"üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b>\n"
                    f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç\n"
                    f"–Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ."
                )
            
            await message.answer(text)
            
        except Exception as e:
            logger.error(f"Error showing language statistics: {e}")
            lang = await get_user_lang(message.from_user.id)
            error_text = "Xatolik yuz berdi." if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
            await message.answer(error_text)

    return router
